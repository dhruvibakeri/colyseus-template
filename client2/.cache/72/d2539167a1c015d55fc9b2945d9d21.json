{"id":"node_modules/@colyseus/schema/lib/ChangeTree.js","dependencies":[{"name":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/ChangeTree.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/package.json","includedInParent":true,"mtime":1601631889011},{"name":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/package.json","includedInParent":true,"mtime":1601630314618},{"name":"./Schema","loc":{"line":4,"column":23},"parent":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/ChangeTree.js","resolved":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/Schema.js"},{"name":"./types/ArraySchema","loc":{"line":5,"column":28},"parent":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/ChangeTree.js","resolved":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/types/ArraySchema.js"},{"name":"./types/MapSchema","loc":{"line":6,"column":26},"parent":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/ChangeTree.js","resolved":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/types/MapSchema.js"}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ChangeTree = void 0;\nvar Schema_1 = require(\"./Schema\");\nvar ArraySchema_1 = require(\"./types/ArraySchema\");\nvar MapSchema_1 = require(\"./types/MapSchema\");\nvar ChangeTree = /** @class */ (function () {\n    function ChangeTree(indexes, parentField, parent) {\n        if (indexes === void 0) { indexes = {}; }\n        if (parentField === void 0) { parentField = null; }\n        this.changed = false;\n        this.changes = new Set();\n        this.allChanges = new Set();\n        this.deletedKeys = {};\n        this.fieldIndexes = indexes;\n        this.parent = parent;\n        this.parentField = parentField;\n    }\n    ChangeTree.prototype.change = function (fieldName, isDelete) {\n        if (isDelete === void 0) { isDelete = false; }\n        var fieldIndex = this.fieldIndexes[fieldName];\n        var field = (typeof (fieldIndex) === \"number\") ? fieldIndex : fieldName;\n        if (!isDelete) {\n            this.changed = true;\n            this.changes.add(field);\n            this.allChanges.add(field);\n        }\n        else if (isDelete) {\n            // if (this.changes.has(field))  {\n            //     /**\n            //      * un-flag a change if item has been added AND removed in the same patch.\n            //      * (https://github.com/colyseus/colyseus-unity3d/issues/103)\n            //      */\n            //     this.changes.delete(field);\n            // } else {\n            this.changed = true;\n            this.changes.add(field);\n            // }\n            // discard all-changes for removed items.\n            this.allChanges.delete(field);\n        }\n        if (this.parent) {\n            this.parent.change(this.parentField);\n        }\n    };\n    ChangeTree.prototype.mapIndex = function (instance, key) {\n        if (typeof instance === \"object\") {\n            if (!this.indexMap) {\n                this.indexMap = new Map();\n                this.indexChange = new Map();\n            }\n            this.indexMap.set(instance, key);\n        }\n    };\n    ChangeTree.prototype.getIndex = function (instance) {\n        return this.indexMap && this.indexMap.get(instance);\n    };\n    ChangeTree.prototype.deleteIndex = function (instance) {\n        if (typeof instance === \"object\") {\n            this.deletedKeys[this.indexMap.get(instance)] = true;\n            this.indexMap.delete(instance);\n        }\n    };\n    ChangeTree.prototype.isDeleted = function (key) {\n        return this.deletedKeys[key] !== undefined;\n    };\n    ChangeTree.prototype.mapIndexChange = function (instance, previousKey) {\n        if (typeof instance === \"object\" && !this.indexChange.has(instance)) {\n            this.indexChange.set(instance, previousKey);\n        }\n    };\n    ChangeTree.prototype.getIndexChange = function (instance) {\n        return this.indexChange && this.indexChange.get(instance);\n    };\n    ChangeTree.prototype.deleteIndexChange = function (instance) {\n        if (typeof instance === \"object\") {\n            this.indexChange.delete(instance);\n        }\n    };\n    ChangeTree.prototype.changeAll = function (obj) {\n        if (obj instanceof Schema_1.Schema) {\n            var schema = obj['_schema'];\n            for (var field in schema) {\n                // ensure ArraySchema and MapSchema already initialized\n                // on its structure have a valid parent.\n                if ((obj[field] instanceof Schema_1.Schema ||\n                    obj[field] instanceof ArraySchema_1.ArraySchema ||\n                    obj[field] instanceof MapSchema_1.MapSchema) &&\n                    !obj[field].$changes.parent.parent) {\n                    obj[field].$changes.parent = this;\n                }\n                if (obj[field] !== undefined) {\n                    this.change(field);\n                }\n            }\n        }\n        else {\n            var keys = Object.keys(obj);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (obj[key] !== undefined) {\n                    this.change(key);\n                }\n            }\n        }\n    };\n    ChangeTree.prototype.discard = function () {\n        this.changed = false;\n        this.changes.clear();\n        this.deletedKeys = {};\n        if (this.indexChange) {\n            this.indexChange.clear();\n        }\n    };\n    ChangeTree.prototype.clone = function () {\n        return new ChangeTree(this.fieldIndexes, this.parentField, undefined);\n    };\n    return ChangeTree;\n}());\nexports.ChangeTree = ChangeTree;\n"},"sourceMaps":{"js":{"version":3,"file":"ChangeTree.js","sourceRoot":"","sources":["../src/ChangeTree.ts"],"names":[],"mappings":";;;AAAA,mCAAkC;AAClC,mDAAkD;AAClD,+CAA8C;AAI9C;IAoBI,oBACI,OAAyC,EACzC,WAA4B,EAC5B,MAAmB;QAFnB,wBAAA,EAAA,YAAyC;QACzC,4BAAA,EAAA,kBAA4B;QAnBhC,YAAO,GAAY,KAAK,CAAC;QACzB,YAAO,GAAG,IAAI,GAAG,EAAY,CAAC;QAC9B,eAAU,GAAG,IAAI,GAAG,EAAY,CAAC;QAOjC,gBAAW,GAAQ,EAAE,CAAC;QAalB,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;QAE5B,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC;IACnC,CAAC;IAED,2BAAM,GAAN,UAAO,SAAmB,EAAE,QAAyB;QAAzB,yBAAA,EAAA,gBAAyB;QACjD,IAAM,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC;QAChD,IAAM,KAAK,GAAG,CAAC,OAAM,CAAC,UAAU,CAAC,KAAK,QAAQ,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,SAAS,CAAC;QAEzE,IAAI,CAAC,QAAQ,EAAE;YACX,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAExB,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SAE9B;aAAM,IAAI,QAAQ,EAAE;YACjB,kCAAkC;YAClC,UAAU;YACV,gFAAgF;YAChF,mEAAmE;YACnE,UAAU;YACV,kCAAkC;YAElC,WAAW;YACP,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;YACpB,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;YAC5B,IAAI;YAEJ,yCAAyC;YACzC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;SACjC;QAED,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;SACxC;IACL,CAAC;IAED,6BAAQ,GAAR,UAAS,QAAa,EAAE,GAAa;QACjC,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAC9B,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAChB,IAAI,CAAC,QAAQ,GAAG,IAAI,GAAG,EAAiB,CAAC;gBACzC,IAAI,CAAC,WAAW,GAAG,IAAI,GAAG,EAAiB,CAAC;aAC/C;YAED,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC;SACpC;IACL,CAAC;IAED,6BAAQ,GAAR,UAAU,QAAa;QACnB,OAAO,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IACxD,CAAC;IAED,gCAAW,GAAX,UAAY,QAAa;QACrB,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAC9B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,GAAG,IAAI,CAAC;YACrD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SAClC;IACL,CAAC;IAED,8BAAS,GAAT,UAAU,GAAQ;QACd,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,KAAK,SAAS,CAAC;IAC/C,CAAC;IAED,mCAAc,GAAd,UAAe,QAAa,EAAE,WAAqB;QAC/C,IAAI,OAAO,QAAQ,KAAK,QAAQ,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;YACjE,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAC;SAC/C;IACL,CAAC;IAED,mCAAc,GAAd,UAAgB,QAAa;QACzB,OAAO,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED,sCAAiB,GAAjB,UAAkB,QAAa;QAC3B,IAAI,OAAO,QAAQ,KAAK,QAAQ,EAAE;YAC9B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;SACrC;IACL,CAAC;IAED,8BAAS,GAAT,UAAU,GAAqC;QAC3C,IAAI,GAAG,YAAY,eAAM,EAAE;YACvB,IAAM,MAAM,GAAG,GAAG,CAAC,SAAS,CAAC,CAAC;YAC9B,KAAK,IAAM,KAAK,IAAI,MAAM,EAAE;gBAExB,uDAAuD;gBACvD,wCAAwC;gBACxC,IACI,CACI,GAAG,CAAC,KAAK,CAAC,YAAY,eAAM;oBAC5B,GAAG,CAAC,KAAK,CAAC,YAAY,yBAAW;oBACjC,GAAG,CAAC,KAAK,CAAC,YAAY,qBAAS,CAClC;oBACD,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,MAAM,EACpC;oBACE,GAAG,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC;iBACrC;gBAED,IAAI,GAAG,CAAC,KAAK,CAAC,KAAK,SAAS,EAAE;oBAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBACtB;aACJ;SAEJ;aAAM;YACH,IAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC9B,KAAkB,UAAI,EAAJ,aAAI,EAAJ,kBAAI,EAAJ,IAAI,EAAE;gBAAnB,IAAM,GAAG,aAAA;gBACV,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,SAAS,EAAE;oBACxB,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;iBACpB;aACJ;SACJ;IACL,CAAC;IAED,4BAAO,GAAP;QACI,IAAI,CAAC,OAAO,GAAG,KAAK,CAAC;QACrB,IAAI,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAEtB,IAAI,IAAI,CAAC,WAAW,EAAE;YAClB,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;SAC5B;IACL,CAAC;IAED,0BAAK,GAAL;QACI,OAAO,IAAI,UAAU,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;IAC1E,CAAC;IAgDL,iBAAC;AAAD,CAAC,AAtMD,IAsMC;AAtMY,gCAAU","sourcesContent":[null]}},"error":null,"hash":"69bb0b81635c01e8bf00b1e34bccfc3c","cacheData":{"env":{}}}