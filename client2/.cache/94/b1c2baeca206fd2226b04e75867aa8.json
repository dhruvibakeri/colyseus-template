{"id":"node_modules/@colyseus/schema/lib/Reflection.js","dependencies":[{"name":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/Reflection.js.map","includedInParent":true,"mtime":499162500000},{"name":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/package.json","includedInParent":true,"mtime":1601631889011},{"name":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/package.json","includedInParent":true,"mtime":1601630314618},{"name":"./annotations","loc":{"line":23,"column":28},"parent":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/Reflection.js","resolved":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/annotations.js"},{"name":"./Schema","loc":{"line":24,"column":23},"parent":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/Reflection.js","resolved":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/Schema.js"},{"name":"./types/ArraySchema","loc":{"line":25,"column":28},"parent":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/Reflection.js","resolved":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/types/ArraySchema.js"},{"name":"./types/MapSchema","loc":{"line":26,"column":26},"parent":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/Reflection.js","resolved":"/Users/dhruvibakeri/Documents/CS4500/fish/client2/node_modules/@colyseus/schema/lib/types/MapSchema.js"}],"generated":{"js":"\"use strict\";\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Reflection = exports.ReflectionType = exports.ReflectionField = void 0;\nvar annotations_1 = require(\"./annotations\");\nvar Schema_1 = require(\"./Schema\");\nvar ArraySchema_1 = require(\"./types/ArraySchema\");\nvar MapSchema_1 = require(\"./types/MapSchema\");\nvar reflectionContext = new annotations_1.Context();\n/**\n * Reflection\n */\nvar ReflectionField = /** @class */ (function (_super) {\n    __extends(ReflectionField, _super);\n    function ReflectionField() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        annotations_1.type(\"string\", reflectionContext)\n    ], ReflectionField.prototype, \"name\", void 0);\n    __decorate([\n        annotations_1.type(\"string\", reflectionContext)\n    ], ReflectionField.prototype, \"type\", void 0);\n    __decorate([\n        annotations_1.type(\"uint8\", reflectionContext)\n    ], ReflectionField.prototype, \"referencedType\", void 0);\n    return ReflectionField;\n}(Schema_1.Schema));\nexports.ReflectionField = ReflectionField;\nvar ReflectionType = /** @class */ (function (_super) {\n    __extends(ReflectionType, _super);\n    function ReflectionType() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.fields = new ArraySchema_1.ArraySchema();\n        return _this;\n    }\n    __decorate([\n        annotations_1.type(\"uint8\", reflectionContext)\n    ], ReflectionType.prototype, \"id\", void 0);\n    __decorate([\n        annotations_1.type([ReflectionField], reflectionContext)\n    ], ReflectionType.prototype, \"fields\", void 0);\n    return ReflectionType;\n}(Schema_1.Schema));\nexports.ReflectionType = ReflectionType;\nvar Reflection = /** @class */ (function (_super) {\n    __extends(Reflection, _super);\n    function Reflection() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.types = new ArraySchema_1.ArraySchema();\n        return _this;\n    }\n    Reflection.encode = function (instance) {\n        var rootSchemaType = instance.constructor;\n        var reflection = new Reflection();\n        reflection.rootType = rootSchemaType._typeid;\n        var buildType = function (currentType, schema) {\n            for (var fieldName in schema) {\n                var field = new ReflectionField();\n                field.name = fieldName;\n                var fieldType = void 0;\n                if (typeof (schema[fieldName]) === \"string\") {\n                    fieldType = schema[fieldName];\n                }\n                else {\n                    var isSchema = typeof (schema[fieldName]) === \"function\";\n                    var isArray = Array.isArray(schema[fieldName]);\n                    var isMap = !isArray && schema[fieldName].map;\n                    var childTypeSchema = void 0;\n                    if (isSchema) {\n                        fieldType = \"ref\";\n                        childTypeSchema = schema[fieldName];\n                    }\n                    else if (isArray) {\n                        fieldType = \"array\";\n                        if (typeof (schema[fieldName][0]) === \"string\") {\n                            fieldType += \":\" + schema[fieldName][0]; // array:string\n                        }\n                        else {\n                            childTypeSchema = schema[fieldName][0];\n                        }\n                    }\n                    else if (isMap) {\n                        fieldType = \"map\";\n                        if (typeof (schema[fieldName].map) === \"string\") {\n                            fieldType += \":\" + schema[fieldName].map; // array:string\n                        }\n                        else {\n                            childTypeSchema = schema[fieldName].map;\n                        }\n                    }\n                    field.referencedType = (childTypeSchema)\n                        ? childTypeSchema._typeid\n                        : 255;\n                }\n                field.type = fieldType;\n                currentType.fields.push(field);\n            }\n            reflection.types.push(currentType);\n        };\n        var types = rootSchemaType._context.types;\n        for (var typeid in types) {\n            var type_1 = new ReflectionType();\n            type_1.id = Number(typeid);\n            buildType(type_1, types[typeid]._schema);\n        }\n        return reflection.encodeAll();\n    };\n    Reflection.decode = function (bytes) {\n        var context = new annotations_1.Context();\n        var reflection = new Reflection();\n        reflection.decode(bytes);\n        var schemaTypes = reflection.types.reduce(function (types, reflectionType) {\n            types[reflectionType.id] = /** @class */ (function (_super) {\n                __extends(_, _super);\n                function _() {\n                    return _super !== null && _super.apply(this, arguments) || this;\n                }\n                return _;\n            }(Schema_1.Schema));\n            return types;\n        }, {});\n        reflection.types.forEach(function (reflectionType, i) {\n            reflectionType.fields.forEach(function (field) {\n                var schemaType = schemaTypes[reflectionType.id];\n                if (field.referencedType !== undefined) {\n                    var refType = schemaTypes[field.referencedType];\n                    // map or array of primitive type (255)\n                    if (!refType) {\n                        refType = field.type.split(\":\")[1];\n                    }\n                    if (field.type.indexOf(\"array\") === 0) {\n                        annotations_1.type([refType], context)(schemaType.prototype, field.name);\n                    }\n                    else if (field.type.indexOf(\"map\") === 0) {\n                        annotations_1.type({ map: refType }, context)(schemaType.prototype, field.name);\n                    }\n                    else if (field.type === \"ref\") {\n                        annotations_1.type(refType, context)(schemaType.prototype, field.name);\n                    }\n                }\n                else {\n                    annotations_1.type(field.type, context)(schemaType.prototype, field.name);\n                }\n            });\n        });\n        var rootType = schemaTypes[reflection.rootType];\n        var rootInstance = new rootType();\n        /**\n         * auto-initialize referenced types on root type\n         * to allow registering listeners immediatelly on client-side\n         */\n        for (var fieldName in rootType._schema) {\n            var fieldType = rootType._schema[fieldName];\n            if (typeof (fieldType) !== \"string\") {\n                var isSchema = typeof (fieldType) === \"function\";\n                var isArray = Array.isArray(fieldType);\n                var isMap = !isArray && fieldType.map;\n                rootInstance[fieldName] = (isArray)\n                    ? new ArraySchema_1.ArraySchema()\n                    : (isMap)\n                        ? new MapSchema_1.MapSchema()\n                        : (isSchema)\n                            ? new fieldType()\n                            : undefined;\n            }\n        }\n        return rootInstance;\n    };\n    __decorate([\n        annotations_1.type([ReflectionType], reflectionContext)\n    ], Reflection.prototype, \"types\", void 0);\n    __decorate([\n        annotations_1.type(\"uint8\", reflectionContext)\n    ], Reflection.prototype, \"rootType\", void 0);\n    return Reflection;\n}(Schema_1.Schema));\nexports.Reflection = Reflection;\n"},"sourceMaps":{"js":{"version":3,"file":"Reflection.js","sourceRoot":"","sources":["../src/Reflection.ts"],"names":[],"mappings":"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","sourcesContent":[null]}},"error":null,"hash":"8d03e65fa23d416143e2761eedff2717","cacheData":{"env":{}}}